@import "./variables.less";

// Button styles
// @prop --text-color: Text color of the button
// @prop --activated-text-color: Text color of the button when pressed
// @prop --background-color: Background color of the button
// @prop --activated-background-color: Background color of the button when pressed
// @prop --border-radius: Border radius of the button
// @prop --border-width: Border width of the button
// @prop --border-style: Border style of the button
// @prop --border-color: Border color of the button
// @prop --activated-border-color: Border color of the button when pressed
// @prop --padding-start: Left padding of the button
// @prop --padding-end: Right padding of the button
// @prop --height: Height of the button
// @prop --font-size: Font size of the button
// @prop --opacity: Opacity of the button background
// @prop --activated-opacity: Opacity of the button background when pressed
// @prop --disabled-opacity: Opacity of the button background when disabled
// @prop --block-margin-top: Margin top of the button when at full-width
// @prop --block-margin-bottom: Margin bottom of the button when at full-width
// -----------------------------
.@{button-prefix-cls} {
  .button-reset();

  position: relative;
  display: inline-block;
  box-sizing: border-box;

  margin: 0;
  padding: 0;
  min-width: auto;
  min-height: auto;
  border: none;
  border-radius: 0;
  vertical-align: middle;
  text-align: center;
  text-overflow: ellipsis;
  font-size: initial;
  line-height: initial;
  cursor: pointer;

  .button-native();

  &::after {
    content: " ";
    width: 100%;
    height: 100%;
    position: absolute;
    top: -6px;
    right: -6px;
    bottom: -6px;
    left: -6px;
    border: none;
    transform: none;
    transform-origin: 0 0;
    box-sizing: border-box;
    border-radius: 0;
  }

  // Button fills
  // --------------------------------------------------
  &--clear {
    --activated-opacity: @button-clear-activated-opacity;
    .button-color(
      transparent, transparent, #get-color(positive, active)[]
    );
  }
  
  &--outline {
    .button-color(
      transparent, #get-color(positive)[],
      #get-color(positive)[], #get-color(positive, contrast)[],
      #get-color(positive)[], #get-color(positive)[]
    );
  }

  // Button Sizes
  // --------------------------------------------------
  &--small {
    .button-size(@button-border-radius-sm, @button-font-size-sm, @button-height-sm, @button-padding-sm);
  }

  &--large {
    .button-size(@button-border-radius-lg, @button-font-size-lg, @button-height-lg, @button-padding-lg);
  }

  // Strong Button
  &--strong {
    font-weight: @button-strong-font-weight !important;
  }

  // Block/Full Button
  // --------------------------------------------------
  &--block,
  &--full {
    --block-margin-top: @button-block-margin;
    --block-margin-bottom: @button-block-margin;
    
    width: 100% !important;
    contain: content !important;
    margin-top: var(--block-margin-top);
    margin-bottom: var(--block-margin-bottom);
  }

  &--block {
    display: block;
    clear: both;

    &::after {
      clear: both;
    }
  }

  &--full {
    display: block;
    margin-right: 0 !important;
    margin-left: 0 !important;
  }

  &--full:not(&--rounded) {
    border-right-width: 0;
    border-left-width: 0;
    border-radius: 0;
  }

  // Button Shapes
  // --------------------------------------------------
  &--rounded {
    --border-radius: var(--height);
  }

  &--rectangular {
    --border-radius: 0;
  }

  // Button Disabled
  // --------------------------------------------------
  &--disabled {
    cursor: default;
    opacity: var(--disabled-opacity) !important;
    pointer-events: none;
  }

  // Button Activated
  // --------------------------------------------------
  &--activated {
    opacity: var(--activated-opacity) !important;
    .button-hover(var(--activated-background-color), var(--activated-border-color), var(--activated-text-color));
  }

  // Button Colors
  &.@{dora-prefix}-color {
    .button-color(#current-color(base)[], #current-color(active)[], #current-color(contrast)[]);
  }

  &:is(&--clear).@{dora-prefix}-color {
    .button-color(
      transparent, transparent, #current-color(active)[]
    );
  }

  &:is(&--outline).@{dora-prefix}-color {
    .button-color(
      transparent, #current-color(base)[],
      #current-color(base)[], #current-color(contrast)[],
      #current-color(base)[], #current-color(base)[]
    );
  }
}

.button-color(
  @bg-color, @active-bg-color,
  @color, @active-color: @color,
  @border-color: @bg-color, @active-border-color:  @active-bg-color
) {
  --text-color: @color;
  --activated-text-color: @active-color;
  --background-color: @bg-color;
  --activated-background-color: @active-bg-color;
  --border-color: @border-color;
  --activated-border-color: @active-border-color;
}

.button-size(@border-radius, @font-size, @height, @padding) {
  --border-radius: @border-radius;
  --font-size: @font-size;
  --height: @height;
  --padding-start: @padding;
  --padding-end: @padding;
}

.button-native() {
  --opacity: 1;
  --activated-opacity: 1;
  --disabled-opacity: @button-disabled-opacity;
  --border-width: @button-border-width;
  --border-style: @button-border-style;
  --border-color: @button-border-color;

  // Set default color
  .button-color(#get-color(positive)[], #get-color(positive, active)[], #get-color(positive, contrast)[]);
  
  // Set default size
  .button-size(@button-border-radius-base, @button-font-size-base, @button-height-base, @button-padding-base);
  
  padding-top: unset;
  padding-bottom: unset;
  padding-left: var(--padding-start);
  padding-right: var(--padding-end);
  min-width: calc((var(--padding-start) * 1.5) + (var(--padding-end) * 1.5) + var(--font-size));
  min-height: var(--height) !important;
  font-size: var(--font-size);
  line-height: calc(var(--height) - var(--border-width) * 2);
  opacity: var(--opacity);
  border-radius: var(--border-radius);
  border: var(--border-width) var(--border-style) var(--border-color);
  border-color: var(--border-color) !important;
  background-color: var(--background-color) !important;
  color: var(--text-color) !important;
}
